<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.apollo.member.dao.MemberDAO">
	<select id="getProjectMemberlist" parameterType="String"
		resultType="com.apollo.vo.MemberDTO">
		select * from member where mid in (select mid from pmember where pid =
		#{pid})
	</select>
	
	<select id="freeTrialCheck" resultType="Integer">
		select count(*) from member where mid = #{mid} and RDAY <![CDATA[<]]> (SYSDATE -13) and APOLLOKEY is null
	</select>
	
	<insert id="insertMember"
		parameterType="com.apollo.vo.MemberDTO">
		insert into member(mid, mname, pwd, rday, pnum,
		deptname, apollokey, position, emailcheckkey, image)
		values(#{mid}, #{mname}, #{pwd},
		sysdate, #{pnum}, #{deptname}, #{apollokey}, #{position}, #{emailcheckkey},'user.png')
	</insert>
	<select id="getLogin" resultType="String">
		select pwd from member where mid=#{mid}
	</select>

	<select id="getTaskAssignees"
		resultType="com.apollo.vo.MemberDTO">
		select * from member where mid in (select mid from assignee
		where tid= #{tid})
	</select>

	<select id="getInviteMemberList"
		parameterType="com.apollo.vo.MidpidDTO"
		resultType="com.apollo.vo.MemberDTO">
		select * from member where apollokey = (select apollokey
		from member where
		mid = #{mid}) and mid not in (select mid from pmember
		where pid =
		#{pid})
	</select>

	<insert id="insertPmember"
		parameterType="com.apollo.vo.MidpidDTO">
		insert into pmember values(#{mid}, #{pid})
	</insert>
	<select id="midCheck" resultType="int">
		select count(*) from member
		where mid = #{mid}
	</select>
	<update id="findPwd" parameterType="com.apollo.vo.MemberDTO">
		update member set pwd=#{pwd} where mid=#{mid}
	</update>

	<select id="findPwdIdCheck" resultType="String">
		select mname from member
		where mid=#{mid}
	</select>
	
	<select id="getProjectMemberlist2" parameterType="Integer"
		resultType="com.apollo.vo.MemberDTO">
		select * from member where mid in (select mid from pmember where pid = #{pid})
	</select>
	<select id="getProfileInfoMember" resultType="com.apollo.vo.MemberDTO">
		select * from member where mid=#{mid}
	</select>


	<select id="getTaskModifierName" parameterType="String" resultType="String">
		select mname from member where mid = #{mid}
	</select>   
		
	<select id="getSameTaskMemberList" parameterType="Integer" resultType="com.apollo.vo.MemberDTO">
		select * from member where mid in (select mid from assignee where tid = #{tid})
	</select>  
	
	<select id="getSameProjectButNotSameTaskMemberList" parameterType="com.apollo.vo.TidpidDTO" resultType="com.apollo.vo.MemberDTO">
		select * from member where mid not in (select mid from assignee where tid = #{tid}) and mid in (select mid from pmember where pid = #{pid})
	</select>

	<select id ="selectAssigneesBySid"  parameterType="Integer"  resultType="com.apollo.vo.MemberDTO">
		select mid, mname from member
		where mid in (select mid from assignee
		where tid in (select tid from taskinstep 
		where sid= #{sid}))
	</select>
	<update id="updateMemberInfo" parameterType="com.apollo.vo.MemberDTO">
		update member set
		<if test="image !=null">image=#{image},</if>
		<if test="mname !=null">mname=#{mname},</if>
		<if test="pwd !=null">pwd=#{pwd},</if>
		<if test="apollokey !=null">apollokey=#{apollokey},</if>
		<if test="pnum !=null">pnum=#{pnum},</if>
		<if test="deptname !=null">deptname=#{deptname},</if>
		<if test="position !=null">position=#{position}</if>
		where mid=#{mid}
	</update>
	<update id="updatePwd" parameterType="com.apollo.vo.MemberDTO">
		update member set pwd=#{pwd}
		where mid=#{mid}
	</update>
	<select id="selectMemberList" resultType="com.apollo.vo.MemberDTO">
		select * from member where apollokey=(select apollokey from member where mid=#{mid})
	</select>
	<select id="getSearchMembers"  parameterType="hashmap"  resultType="com.apollo.vo.MemberDTO">
		select * from member 
		where (mid like '%'||#{input}||'%' or mname like '%'||#{input}||'%') 
		and apollokey = (select apollokey from member where mid = #{mid})
	</select>
	
	<select id="googleLogin" parameterType="String" resultType="Integer">
		select count(*) from member where
		mid=#{email}
	</select>
	
	<insert id="googleIdInsert" parameterType="com.apollo.vo.GoogleDTO">
		insert into member(mid, mname, pwd, rday) values(#{gemail}, #{gname}, #{gid}, sysdate)
	</insert>
	
	
	<select id="gerUserProjects" parameterType="String" resultType="com.apollo.vo.ProjectDTO">
		select * from project where pid in (select pid from pmember where mid = #{mid}) order by pid asc
	</select>

	<update id="emailcheck" parameterType="String">
		update member set ischecked='y' where mid=#{mid}
	</update>
	
	<select id="emailcheckbymid" resultType="String">
		select emailcheckkey from member where mid=#{mid}
	</select>
	
	<select id="ischecked" resultType="String">
		select ischecked from member where mid=#{mid}
	</select>
	
	<select id="getminprojectid" resultType="Integer">
		select min(pid) from pmember where mid=#{mid}
	</select>
	
	<select id="selectStepAssignees" parameterType="java.util.List" resultType="com.apollo.vo.MemberDTO">
		select * from member
		where mid in 
		<foreach collection="list" item="step"  open="(" close=")" separator=",">
            #{step.mid}
        </foreach>
	</select>

	<!-- 맴버 이미지 업데이트 -->
	<update id="updateImageName" parameterType="com.apollo.vo.MemberDTO"> 
		update member set image =#{image}
		where mid = #{mid}
	</update>

	<!-- MID로 맴버의 이미지 이름을 가지고 온다  -->
	<select id="findMemberImage" parameterType="String" resultType="String">
		select image from member where mid=#{mid}
	</select>

	<delete id="deletePmember" parameterType="com.apollo.vo.MidpidDTO">
		delete pmember where mid= #{mid} and pid=#{pid}
	</delete>

</mapper>